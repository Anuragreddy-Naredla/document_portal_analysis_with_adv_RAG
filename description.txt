1. create virtual environment.

    -> conda create -p env python=3.10 -y
    -> conda activate env
    -> To check type "pip list"

2. Create the github and commit the files.

    -> git init
    -> give commit and click on Publish Branch

3. To install the requirements.

    -> pip install -r requirements.txt

#### Min requirement for this project ####
1. LLM Model(GROQ[freely],openai[paid],gemini[15days free access], claude[paid], huggingface[freely], Ollama[local setup])
2. Embedding Model (openai, huggingface, gemini)
3. vectordatabase
    -> 3variants of database
        a. inmemory database
        b. ondisk database
        c. cloudbase database

### COMMANDS ###
1. pip list
2. pip install -e .
    -> It will create the document_portal_analysis_with_adv_RAG as the package and also we can publish to pypi 
3. pip list
    -> we can see the document_portal_analysis_with_adv_RAG as package under env which is virtual environment
4. pip install -r requirements.txt
    -> To Install all the libraries.

### API KEYS ###
1. Groq api key.
    -> Go to the groq website https://console.groq.com/keys
    -> Go to API keys tab
    -> Click on Create API Key and copy and paste and give in the .env file
        (GROQ_API_KEY="GIVE YOUR API KEY HERE")
        
2. Google API KEY
    -> Go to the google ai studio website and create the api key. https://aistudio.google.com/prompts/new_chat
    -> click on Create API key and copy and paste under the .env file as 
        (GOOGLE_API_KEY="GIVE YOUR API KEY HERE")

TO TEST THE UI FROM VSCODE:
1. Download "live server" extension from vscode.
2. Right click on "index.html" click on "Open with Live Server".



#WITH COMMAND
1. set LLM_PROVIDER=google
1. cd api/
2. uvicorn main:app --reload 
3. uvicorn api.main:app --port 8083 --reload[If we want to run from ROOT folder we can use this command,
                                            api->folder name, main->python filename,app->fastapi]
        (OR)
   uvicorn api.main:app --host 0.0.0.0 --port 8080 --reload



# FOR CREATING ANOTHER BRANCH AND SWITCH #####
    -> In master branch only we will deploy this app'n
1. git checkout -b dev (We will create a dev branch with this command)
2. git switch dev
3. git  switch master
